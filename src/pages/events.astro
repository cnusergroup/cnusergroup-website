---
/**
 * Events Page
 * Displays all available events with filtering and pagination
 */

import BaseLayout from '../layouts/BaseLayout.astro';
import EventsList from '../components/sections/EventsList.astro';

import { sortEvents, filterEvents } from '../utils/eventProcessing.js';
import type { ProcessedEvent, RawEvent } from '../utils/eventProcessing.js';


// Load processed events data
let processedEvents: ProcessedEvent[] = [];
try {
  const eventsData = await import('../data/events/processed-events.json');
  processedEvents = eventsData.default as ProcessedEvent[] || [];
} catch (error) {
  console.warn('Could not load processed events data:', error);
  // Fallback to raw events if processed events not available
  try {
    const rawEventsData = await import('../../data/events/events.json');
    const { processEvents } = await import('../utils/eventProcessing.js');
    processedEvents = processEvents(rawEventsData.default as RawEvent[] || []);
  } catch (fallbackError) {
    console.warn('Could not load raw events data:', fallbackError);
  }
}

// Get URL parameters for filtering and pagination
const url = new URL(Astro.request.url);
const currentPage = parseInt(url.searchParams.get('page') || '1');
const statusFilter = url.searchParams.get('status') || 'all';
const tagFilter = url.searchParams.get('tag') || '';
const locationFilter = url.searchParams.get('location') || '';
const cityFilter = url.searchParams.get('city') || '';
const searchQuery = url.searchParams.get('q') || '';

// Apply filters
let filteredEvents = processedEvents;

if (statusFilter !== 'all') {
  filteredEvents = filterEvents(filteredEvents, {
    isUpcoming: statusFilter === 'upcoming'
  });
}

if (tagFilter) {
  filteredEvents = filterEvents(filteredEvents, {
    tags: [tagFilter]
  });
}

if (locationFilter) {
  filteredEvents = filterEvents(filteredEvents, {
    searchQuery: locationFilter // Use location as search query
  });
}

if (cityFilter) {
  filteredEvents = filteredEvents.filter(event => 
    event.cityMappings && event.cityMappings.includes(cityFilter)
  );
}

if (searchQuery) {
  filteredEvents = filterEvents(filteredEvents, {
    searchQuery
  });
}

// Sort events with status-based priority (upcoming first, then by sort field ascending)
const sortedEvents = sortEvents(filteredEvents, 'sort', 'asc');

// For static sites, pass all events to client for pagination
const eventsPerPage = 12;

// Don't pre-filter or paginate on server side for static deployment
// Pass all events to client for complete frontend control
const allEventsForClient = sortedEvents;

// Load translations
const translations = await import('../data/translations/zh.json');
const t = translations.default;

// Page metadata
const pageTitle = '活动列表 - 中国用户组';
const pageDescription = '查看所有即将举行和已结束的活动，包括技术分享、工作坊、社区聚会等。';
const canonicalUrl = new URL('/events', Astro.site);

// Generate structured data for SEO
const siteUrl = Astro.site?.toString() || 'https://cnusergroup.com';
const structuredData = {
  "@context": "https://schema.org",
  "@type": "ItemList",
  "name": "CNUserGroup Events",
  "description": pageDescription,
  "numberOfItems": sortedEvents.length,
  "url": `${siteUrl}/events`,
  "itemListElement": sortedEvents.slice(0, 10).map((event, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "item": {
      "@type": "Event",
      "name": event.title,
      "description": event.title,
      "startDate": event.time,
      "location": {
        "@type": "Place",
        "name": event.location
      },
      "url": event.url,
      "image": event.imageUrl,
      "organizer": {
        "@type": "Organization",
        "name": "CNUserGroup",
        "url": siteUrl
      }
    }
  }))
};

// Generate additional SEO data
const eventsPageKeywords = [
  '技术活动', '开发者聚会', '用户组', '社区活动', '技术分享',
  'tech events', 'developer meetup', 'user group', 'community events'
];

// Preload critical event images
const criticalEventImages = sortedEvents.slice(0, 6).map(event => event.imageUrl).filter(Boolean);
---

<BaseLayout 
  title={pageTitle}
  description={pageDescription}
>
  <!-- Structured Data -->
  <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
  
  <!-- SEO Meta Tags -->
  <meta name="keywords" content={eventsPageKeywords.join(', ')} />
  <meta name="robots" content="index, follow" />
  <link rel="canonical" href={canonicalUrl.toString()} />
  
  <!-- Preload critical resources -->
  {criticalEventImages.slice(0, 3).map(imageUrl => (
    <link rel="preload" as="image" href={imageUrl} />
  ))}
  
  <!-- Performance hints -->
  <link rel="dns-prefetch" href="//cdn.huodongxing.com" />
  <link rel="preconnect" href="//cdn.huodongxing.com" crossorigin />
  
  <!-- Events Filter Script -->
  <script src="/js/events-filter.js" type="text/javascript"></script>
  
  <!-- Performance monitoring -->
  <script>
    // Initialize performance monitoring
    if (typeof window !== 'undefined') {
      // Performance monitoring will be added later
      console.log('Events page loaded');
    }
  </script>
  
  <!-- Page Header -->
  <div class="bg-gradient-to-r from-blue-600 to-indigo-700 text-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
      <div class="text-center">
        <h1 class="text-4xl font-bold mb-4">
          {t.events?.title || '活动列表'}
        </h1>
        <p class="text-xl text-blue-100 max-w-3xl mx-auto">
          {t.events.description}
        </p>
        

      </div>
    </div>
  </div>

  <!-- Main Content -->
  <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <!-- Breadcrumb -->
    <nav class="mb-8" aria-label="Breadcrumb">
      <ol class="flex items-center space-x-2 text-sm text-gray-500">
        <li>
          <a href={import.meta.env.BASE_URL} class="hover:text-orange-600" style="transition: color 0.2s;">首页</a>
        </li>
        <li>
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
          </svg>
        </li>
        <li class="text-gray-900 font-medium">活动列表</li>
      </ol>
    </nav>

    <!-- Active Filters Display -->
    {(statusFilter !== 'all' || tagFilter || locationFilter || searchQuery) && (
      <div class="mb-6 p-4 bg-blue-50 rounded-lg">
        <div class="flex items-center justify-between">
          <div class="flex items-center space-x-2">
            <span class="text-sm font-medium text-blue-800">{t.events.filters.activeFilters}:</span>
            <div class="flex flex-wrap gap-2">
              {statusFilter !== 'all' && (
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                  {statusFilter === 'upcoming' ? t.events.upcomingEvents : t.events.pastEvents}
                </span>
              )}
              {tagFilter && (
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                  标签: {tagFilter}
                </span>
              )}
              {locationFilter && (
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                  地点: {locationFilter}
                </span>
              )}
              {searchQuery && (
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                  搜索: {searchQuery}
                </span>
              )}
            </div>
          </div>
          <a
            href={`${(import.meta.env.BASE_URL || '/').replace(/\/$/, '')}/events`}
            class="text-sm text-blue-600 hover:text-blue-800 font-medium"
          >
            {t.events.filters.clearFilters}
          </a>
        </div>
      </div>
    )}



    <!-- Events List -->
    <EventsList
      events={allEventsForClient}
      locale="zh"
      showEngagement={true}
      showFilters={true}
      showPagination={true}
      eventsPerPage={eventsPerPage}
      currentPage={currentPage}
      totalEvents={allEventsForClient.length}
      totalPages={Math.ceil(allEventsForClient.length / eventsPerPage)}
      allEvents={allEventsForClient}
    />
    


    <!-- Call to Action -->
    {sortedEvents.length > 0 && (
      <div class="mt-16 bg-gray-50 rounded-lg p-8 text-center">
        <h2 class="text-2xl font-bold text-gray-900 mb-4">
          {t.events.cta.learnMore}
        </h2>
        <p class="text-gray-600 mb-6">
          {t.events.cta.followUs}
        </p>
        <div class="flex justify-center space-x-4">
          <a
            href={`${(import.meta.env.BASE_URL || '/').replace(/\/$/, '')}/about#contact`}
            class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
          >
            {t.events.cta.contactUs}
          </a>
          <a
            href={`${(import.meta.env.BASE_URL || '/').replace(/\/$/, '')}/cities`}
            class="inline-flex items-center px-6 py-3 border border-gray-300 text-base font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
          >
            {t.events.cta.viewCities}
          </a>
        </div>
      </div>
    )}
  </main>
</BaseLayout>



<style>
  /* Custom styles for better mobile experience */
  @media (max-width: 640px) {
    .events-list {
      padding: 0 1rem;
    }
  }
</style>