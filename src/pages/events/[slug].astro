---
/**
 * Individual Event Detail Page
 * SEO-optimized page for individual events
 */

import BaseLayout from '../../layouts/BaseLayout.astro';
import OptimizedEventImage from '../../components/ui/OptimizedEventImage.astro';
import type { ProcessedEvent } from '../../utils/eventProcessing.js';
import { 
  generateEventSEOData, 
  generateEventOGTags, 
  generateEventTwitterTags,
  generateEventBreadcrumbData
} from '../../utils/eventSEO.js';


export async function getStaticPaths() {
  // Load processed events data
  let processedEvents: ProcessedEvent[] = [];
  try {
    const eventsData = await import('../../data/events/processed-events.json');
    processedEvents = eventsData.default as ProcessedEvent[] || [];
  } catch (error) {
    console.warn('Could not load processed events data for static paths:', error);
    return [];
  }

  return processedEvents.map((event) => ({
    params: { slug: event.slug || `event-${event.id}` },
    props: { event }
  }));
}

const { event } = Astro.props as { event: ProcessedEvent };

// Generate comprehensive SEO data
const siteUrl = Astro.site?.toString() || 'https://cnusergroup.com';
const seoData = generateEventSEOData(event, siteUrl, 'zh');
const ogTags = generateEventOGTags(event, siteUrl, 'zh');
const twitterTags = generateEventTwitterTags(event, siteUrl, 'zh');
const breadcrumbData = generateEventBreadcrumbData(event, siteUrl, 'zh');

// Page metadata
const pageTitle = seoData.title;
const pageDescription = seoData.description;
const canonicalUrl = new URL(`/events/${event.slug}`, Astro.site);

// Load related events (same city or tags)
let relatedEvents: ProcessedEvent[] = [];
try {
  const eventsData = await import('../../data/events/processed-events.json');
  const allEvents = eventsData.default || [];
  
  relatedEvents = (allEvents as ProcessedEvent[])
    .filter(e => e.id !== event.id)
    .filter(e => 
      e.cityMappings.some(city => event.cityMappings.includes(city)) ||
      e.tags.some(tag => event.tags.includes(tag))
    )
    .slice(0, 3);
} catch (error) {
  console.warn('Could not load related events:', error);
}
---

<BaseLayout 
  title={pageTitle}
  description={pageDescription}
  image={event.imageUrl}
>
  <!-- Structured Data -->
  <script type="application/ld+json" set:html={JSON.stringify(seoData.structuredData)} />
  <script type="application/ld+json" set:html={JSON.stringify(breadcrumbData)} />
  
  <!-- SEO Meta Tags -->
  <meta name="keywords" content={seoData.keywords.join(', ')} />
  <meta name="robots" content="index, follow" />
  <link rel="canonical" href={canonicalUrl.toString()} />
  
  <!-- Open Graph Tags -->
  {Object.entries(ogTags).map(([property, content]) => (
    <meta property={property} content={content} />
  ))}
  
  <!-- Twitter Tags -->
  {Object.entries(twitterTags).map(([name, content]) => (
    <meta name={name} content={content} />
  ))}
  
  <!-- Breadcrumb -->
  <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4" aria-label="Breadcrumb">
    <ol class="flex items-center space-x-2 text-sm text-gray-500">
      <li>
        <a href={import.meta.env.BASE_URL || "/"} class="hover:text-orange-600" style="transition: color 0.2s;">首页</a>
      </li>
      <li>
        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
        </svg>
      </li>
      <li>
        <a href={`${(import.meta.env.BASE_URL || '/').replace(/\/$/, '')}/events`} class="hover:text-orange-600" style="transition: color 0.2s;">活动列表</a>
      </li>
      <li>
        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
        </svg>
      </li>
      <li class="text-gray-900 font-medium truncate">{event.title}</li>
    </ol>
  </nav>

  <!-- Main Content -->
  <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
      <!-- Event Details -->
      <div class="lg:col-span-2">
        <!-- Event Header -->
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">
          <div class="flex items-start justify-between mb-4">
            <div class="flex-1">
              <h1 class="text-3xl font-bold text-gray-900 mb-2">{event.title}</h1>
              <div class="flex items-center space-x-4 text-sm text-gray-600">
                <div class="flex items-center">
                  <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                  </svg>
                  <span>{event.formattedDate}</span>
                </div>
                <div class="flex items-center">
                  <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                  </svg>
                  <span>{event.location}</span>
                </div>
              </div>
            </div>
            <div class="flex items-center space-x-2">
              <span class={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${
                event.isUpcoming ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-600'
              }`}>
                {event.isUpcoming ? '即将举行' : '已结束'}
              </span>
            </div>
          </div>
          
          <!-- Event Image -->
          {event.imageUrl && (
            <div class="mb-6">
              <OptimizedEventImage
                src={event.imageUrl}
                title={event.title}
                location={event.location}
                size="hero"
                lazy={false}
                critical={true}
                locale="zh"
                className="w-full h-64 rounded-lg"
              />
            </div>
          )}
          
          <!-- Event Tags -->
          {event.tags && event.tags.length > 0 && (
            <div class="flex flex-wrap gap-2 mb-6">
              {event.tags.map(tag => (
                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-50 text-blue-700">
                  {tag}
                </span>
              ))}
            </div>
          )}
          
          <!-- Engagement Stats -->
          {(event.views > 0 || event.favorites > 0) && (
            <div class="flex items-center space-x-6 mb-6 p-4 bg-gray-50 rounded-lg">
              {event.views > 0 && (
                <div class="flex items-center text-gray-600">
                  <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                  </svg>
                  <span class="font-medium">{event.views.toLocaleString()}</span>
                  <span class="ml-1">浏览</span>
                </div>
              )}
              {event.favorites > 0 && (
                <div class="flex items-center text-gray-600">
                  <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"></path>
                  </svg>
                  <span class="font-medium">{event.favorites.toLocaleString()}</span>
                  <span class="ml-1">收藏</span>
                </div>
              )}
            </div>
          )}
          
          <!-- Action Button -->
          <div class="flex justify-center">
            <a
              href={event.url}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors"
            >
              查看活动详情
              <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
              </svg>
            </a>
          </div>
        </div>
      </div>
      
      <!-- Sidebar -->
      <div class="lg:col-span-1">
        <!-- Related Events -->
        {relatedEvents.length > 0 && (
          <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
            <h2 class="text-lg font-semibold text-gray-900 mb-4">相关活动</h2>
            <div class="space-y-4">
              {relatedEvents.map(relatedEvent => (
                <div class="border-b border-gray-100 pb-4 last:border-b-0 last:pb-0">
                  <h3 class="font-medium text-gray-900 mb-2 line-clamp-2">
                    <a href={`${(import.meta.env.BASE_URL || '/').replace(/\/$/, '')}/events/${relatedEvent.slug}`} class="hover:text-blue-600">
                      {relatedEvent.title}
                    </a>
                  </h3>
                  <div class="text-sm text-gray-600 space-y-1">
                    <div class="flex items-center">
                      <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                      </svg>
                      <span>{relatedEvent.formattedDate}</span>
                    </div>
                    <div class="flex items-center">
                      <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                      </svg>
                      <span>{relatedEvent.location}</span>
                    </div>
                  </div>
                </div>
              ))}
            </div>
            <div class="mt-4 pt-4 border-t border-gray-100">
              <a 
                href={`${(import.meta.env.BASE_URL || '/').replace(/\/$/, '')}/events`}
                class="text-sm text-blue-600 hover:text-blue-800 font-medium"
              >
                查看所有活动 →
              </a>
            </div>
          </div>
        )}
        
        <!-- Share Section -->
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mt-6">
          <h2 class="text-lg font-semibold text-gray-900 mb-4">分享活动</h2>
          <div class="flex space-x-3">
            <button 
              onclick="shareEvent('weibo')"
              class="flex-1 bg-red-500 hover:bg-red-600 text-white px-3 py-2 rounded text-sm font-medium transition-colors"
            >
              微博
            </button>
            <button 
              onclick="shareEvent('wechat')"
              class="flex-1 bg-green-500 hover:bg-green-600 text-white px-3 py-2 rounded text-sm font-medium transition-colors"
            >
              微信
            </button>
            <button 
              onclick="shareEvent('copy')"
              class="flex-1 bg-gray-500 hover:bg-gray-600 text-white px-3 py-2 rounded text-sm font-medium transition-colors"
            >
              复制链接
            </button>
          </div>
        </div>
      </div>
    </div>
  </main>
</BaseLayout>

<script is:inline>
  // Ensure the script runs after DOM is loaded
  (function() {
    // Share functionality - Define globally immediately
    window.shareEvent = function(platform) {
      try {
        const url = window.location.href;
        const title = document.title.split(' | ')[0]; // 获取页面标题，去掉网站名称
        const text = title;
        
        console.log('Share function called with platform:', platform);
        console.log('URL:', url);
        console.log('Title:', text);
        
        switch (platform) {
          case 'weibo':
            window.open(`https://service.weibo.com/share/share.php?url=${encodeURIComponent(url)}&title=${encodeURIComponent(text)}`, '_blank');
            break;
          case 'wechat':
            // For WeChat, we'll copy to clipboard and show a message
            if (navigator.clipboard) {
              navigator.clipboard.writeText(`${text} ${url}`).then(() => {
                alert('链接已复制到剪贴板，请在微信中粘贴分享');
              }).catch(() => {
                // Fallback for older browsers
                const textArea = document.createElement('textarea');
                textArea.value = `${text} ${url}`;
                document.body.appendChild(textArea);
                textArea.select();
                document.execCommand('copy');
                document.body.removeChild(textArea);
                alert('链接已复制到剪贴板，请在微信中粘贴分享');
              });
            } else {
              // Fallback for browsers without clipboard API
              const textArea = document.createElement('textarea');
              textArea.value = `${text} ${url}`;
              document.body.appendChild(textArea);
              textArea.select();
              document.execCommand('copy');
              document.body.removeChild(textArea);
              alert('链接已复制到剪贴板，请在微信中粘贴分享');
            }
            break;
          case 'copy':
            if (navigator.clipboard) {
              navigator.clipboard.writeText(url).then(() => {
                alert('链接已复制到剪贴板');
              }).catch(() => {
                // Fallback for older browsers
                const textArea = document.createElement('textarea');
                textArea.value = url;
                document.body.appendChild(textArea);
                textArea.select();
                document.execCommand('copy');
                document.body.removeChild(textArea);
                alert('链接已复制到剪贴板');
              });
            } else {
              // Fallback for browsers without clipboard API
              const textArea = document.createElement('textarea');
              textArea.value = url;
              document.body.appendChild(textArea);
              textArea.select();
              document.execCommand('copy');
              document.body.removeChild(textArea);
              alert('链接已复制到剪贴板');
            }
            break;
          default:
            console.warn('Unknown share platform:', platform);
        }
      } catch (error) {
        console.error('Share function error:', error);
        alert('分享功能暂时不可用，请稍后再试');
      }
    };
    
    console.log('Share function initialized');
  })();
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>