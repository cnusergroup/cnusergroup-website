---
import { getLanguageFromUrl, t } from '../../utils';
import communityImages from '../../data/community-images.json';

const lang = getLanguageFromUrl(Astro.url);
---

<div id="floating-qr" class="floating-qr-container">
  <div class="floating-qr-content">
    <!-- 二维码面板 - 默认显示 -->
    <div id="qr-panel" class="qr-panel">
      <div class="qr-content">
        <div class="qr-image-container">
          <img 
            src={communityImages["User Group 公众号"]} 
            alt={lang === 'zh' ? 'User Group 公众号二维码' : 'User Group WeChat QR Code'}
            class="qr-image"
          />
        </div>
        <p class="qr-description" set:html={
          lang === 'zh' 
            ? '扫码关注亚马逊云科技<br>User Group 公众号' 
            : 'Scan to Follow AWS<br>User Group WeChat'
        }></p>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const floatingQR = document.getElementById('floating-qr');
    
    if (!floatingQR) return;
    
    // 滚动时的显示/隐藏逻辑
    let lastScrollY = window.scrollY;
    let isVisible = true;
    
    function handleScroll() {
      const currentScrollY = window.scrollY;
      const scrollingDown = currentScrollY > lastScrollY;
      const shouldShow = currentScrollY < 100 || !scrollingDown;
      
      if (shouldShow && !isVisible) {
        floatingQR?.classList.add('visible');
        isVisible = true;
      } else if (!shouldShow && isVisible) {
        floatingQR?.classList.remove('visible');
        isVisible = false;
      }
      
      lastScrollY = currentScrollY;
    }
    
    // 节流滚动事件
    let scrollTimeout: number | undefined;
    window.addEventListener('scroll', () => {
      if (scrollTimeout) {
        clearTimeout(scrollTimeout);
      }
      scrollTimeout = window.setTimeout(handleScroll, 10);
    });
    
    // 初始显示
    floatingQR.classList.add('visible');
  });
</script>

<style>
  .floating-qr-container {
    position: fixed;
    right: 20px;
    bottom: 120px;
    z-index: 1000;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 0;
    visibility: hidden;
    transform: translateX(100px);
  }
  
  .floating-qr-container.visible {
    opacity: 1;
    visibility: visible;
    transform: translateX(0);
  }
  
  .floating-qr-content {
    position: relative;
  }
  
  /* 二维码面板 - 默认显示 */
  .qr-panel {
    width: 140px;
    background: white;
    border-radius: 12px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);
    border: 2px solid rgba(255, 149, 0, 0.2);
    transition: all 0.3s ease;
  }
  
  .qr-panel:hover {
    transform: translateY(-2px);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
    border-color: rgba(255, 149, 0, 0.3);
  }
  
  .qr-content {
    padding: 12px;
  }
  
  .qr-image-container {
    display: flex;
    justify-content: center;
    margin-bottom: 8px;
  }
  
  .qr-image {
    width: 100px;
    height: 100px;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }
  
  .qr-description {
    text-align: center;
    font-size: 11px;
    font-weight: 500;
    color: #374151;
    margin: 0;
    line-height: 1.3;
  }
  
  /* 响应式设计 */
  @media (max-width: 768px) {
    .floating-qr-container {
      right: 15px;
      bottom: 100px;
    }
    
    .qr-panel {
      width: 120px;
    }
    
    .qr-content {
      padding: 10px;
    }
    
    .qr-image {
      width: 80px;
      height: 80px;
    }
    
    .qr-description {
      font-size: 10px;
    }
  }
  
  @media (max-width: 480px) {
    .floating-qr-container {
      right: 10px;
      bottom: 80px;
    }
    
    .qr-panel {
      width: 110px;
    }
    
    .qr-content {
      padding: 8px;
    }
    
    .qr-image {
      width: 70px;
      height: 70px;
    }
    
    .qr-description {
      font-size: 9px;
    }
  }
  
  /* 动画效果 */
  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-3px);
    }
  }
  
  .qr-panel {
    animation: float 4s ease-in-out infinite;
  }
  
  /* 微光效果 */
  .qr-panel::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 149, 0, 0.2), transparent);
    border-radius: 12px;
    animation: shimmer 3s infinite;
  }
  
  @keyframes shimmer {
    0% {
      left: -100%;
    }
    100% {
      left: 100%;
    }
  }
</style>