---
import { getLocalizedValue, getRoute } from '../../utils';
import { getCityImageResponsive, generateImageAlt } from '../../utils/images';
import { validateCityCardProps } from '../../utils/validation';
import type { CityCardProps } from '../../types/components';

interface Props extends CityCardProps {}

const { 
  city, 
  lang, 
  class: className = '', 
  variant = 'default', 
  size = 'default',
  theme = 'light',
  showStatus = true,
  showImage = true,
  showSubtitle = true,
  bordered = false,
  shadow = 'md',
  interactive = true,
  disabled = false,
  loading = false,
  onClick,
  onHover,
  onFocus
} = Astro.props;

// 验证属性
if (!validateCityCardProps(Astro.props)) {
  throw new Error(`Invalid CityCard props for city: ${city?.id || 'unknown'}`);
}

const cityDetailUrl = getRoute('city', lang, { id: city.id });
const imageConfig = getCityImageResponsive(city.id);
const imageAlt = generateImageAlt(city.id, lang);

// 生成详细的 aria-label
const statusText = city.active 
  ? (lang === 'zh' ? '活跃社区' : 'active community')
  : (lang === 'zh' ? '社区' : 'community');

const ariaLabel = lang === 'zh' 
  ? `${city.name.zh}${statusText}，点击查看详情`
  : `${city.name.zh} ${statusText}, click to view details`;
---

<div class="city-moudle" data-city-id={city.id}>
  <a 
    href={disabled ? undefined : cityDetailUrl}
    class="city_p"
    aria-label={ariaLabel}
    aria-disabled={disabled}
    tabindex={disabled ? -1 : 0}
  >
    <!-- Desktop/Tablet Image -->
    <img 
      src={imageConfig.src}
      alt={imageAlt}
      class="pc-proper ipad-proper"
      loading="lazy"
    />
    
    <!-- Mobile Image -->
    <img 
      src={imageConfig.mobileSrc || imageConfig.src}
      alt={imageAlt}
      class="mobile-proper"
      loading="lazy"
    />
    
    <!-- City Name -->
    <div class="city_name">
      <div>{city.name.zh}</div>
      <div>{city.name.en}</div>
    </div>
    
    <!-- Active Status Badge -->
    {showStatus && city.active && (
      <div 
        class="city-card__badge city-card__badge--active"
        role="status"
        aria-label={lang === 'zh' ? '活跃社区状态' : 'Active community status'}
      >
        {lang === 'zh' ? '活跃' : 'Active'}
      </div>
    )}
  </a>
</div>

<style>
  /* 基于原始网站的城市卡片样式 */
  .city-moudle {
    position: relative;
    display: block;
    margin: 0 0 20px;
    padding: 0;
    border: 1px solid rgb(255, 255, 255);
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .city-moudle:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    border-color: var(--aws-orange, #ff9900);
  }

  .city_p {
    position: relative;
    display: block;
    margin: 0;
    padding: 0;
    text-decoration: none;
    color: inherit;
  }

  .city_p:focus {
    outline: 2px solid var(--aws-orange, #ff9900);
    outline-offset: 2px;
  }

  .city-moudle:focus-within {
    border-color: var(--aws-orange, #ff9900);
  }

  /* 选中状态 */
  .city-moudle.selected,
  .city-moudle[data-selected="true"] {
    border-color: var(--aws-orange, #ff9900);
    box-shadow: 0 2px 8px rgba(255, 153, 0, 0.2);
  }

  .city-moudle.selected .city_name,
  .city-moudle[data-selected="true"] .city_name {
    color: var(--aws-orange, #ff9900);
  }

  .city_p:focus:not(:focus-visible) {
    outline: none;
  }

  /* 图片样式 */
  .pc-proper,
  .ipad-proper {
    width: 100%;
    height: auto;
    display: block;
    object-fit: cover;
  }

  .mobile-proper {
    width: 100%;
    height: auto;
    display: none;
    object-fit: cover;
  }

  /* 城市名称样式 - 默认上下排列 */
  .city_name {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 2px;
    font-size: 16px;
    font-weight: 400;
    line-height: 20px;
    color: white;
    text-align: center;
    z-index: 2;
    background: linear-gradient(to top, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.5) 60%, transparent 100%);
    padding: 16px 12px 12px;
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);
  }

  .city_name > div {
    margin: 0;
    padding: 0;
  }

  .city_name > div:first-child {
    font-weight: 600;
    font-size: 18px;
  }

  .city_name > div:last-child {
    font-size: 14px;
    opacity: 0.8;
  }

  /* 紧凑布局时改为左右排列 */
  .city-moudle {
    container-type: inline-size;
  }

  /* 容器查询支持 - 根据卡片宽度动态调整 */
  @container (max-width: 200px) {
    .city_name {
      flex-direction: row;
      gap: 6px;
    }

    .city_name > div:first-child {
      font-size: 16px;
    }

    .city_name > div:last-child {
      font-size: 14px;
    }
  }

  @container (max-width: 160px) {
    .city_name {
      gap: 4px;
    }

    .city_name > div:first-child {
      font-size: 14px;
    }

    .city_name > div:last-child {
      font-size: 12px;
    }
  }

  /* 备用方案：基于卡片类名的布局调整 */
  .city-moudle.compact .city_name,
  .city-moudle[data-size="small"] .city_name,
  .city-moudle[data-size="compact"] .city_name {
    flex-direction: row;
    gap: 6px;
  }

  .city-moudle.compact .city_name > div:first-child,
  .city-moudle[data-size="small"] .city_name > div:first-child,
  .city-moudle[data-size="compact"] .city_name > div:first-child {
    font-size: 16px;
  }

  .city-moudle.compact .city_name > div:last-child,
  .city-moudle[data-size="small"] .city_name > div:last-child,
  .city-moudle[data-size="compact"] .city_name > div:last-child {
    font-size: 14px;
  }

  /* 活跃状态徽章 */
  .city-card__badge {
    position: absolute;
    top: 8px;
    right: 8px;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: 500;
    line-height: 1;
    z-index: 3;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .city-card__badge--active {
    background-color: #10b981;
    color: white;
  }

  /* 响应式设计 */
  @media (max-width: 768px) {
    .pc-proper,
    .ipad-proper {
      display: none;
    }

    .mobile-proper {
      display: block;
    }

    .city-card__badge {
      top: 6px;
      right: 6px;
      padding: 3px 6px;
      font-size: 10px;
    }
  }

  @media (max-width: 480px) {
    .city-moudle {
      margin: 0 0 15px;
    }

    .city_name {
      bottom: 8px;
    }

    /* 在小屏幕上强制使用左右排列 */
    .city_name {
      flex-direction: row !important;
      gap: 4px !important;
    }

    .city_name > div:first-child {
      font-size: 14px !important;
    }

    .city_name > div:last-child {
      font-size: 12px !important;
    }
  }

  /* 超小屏幕优化 */
  @media (max-width: 320px) {
    .city_name {
      gap: 2px !important;
    }

    .city_name > div:first-child {
      font-size: 12px !important;
    }

    .city_name > div:last-child {
      font-size: 10px !important;
    }
  }

  /* 悬停效果 */
  .city-moudle:hover .city_name {
    color: var(--aws-orange, #ff9900);
  }

  /* 无障碍支持 */
  @media (prefers-reduced-motion: reduce) {
    .city-moudle {
      transition: none;
    }
    
    .city-moudle:hover {
      transform: none;
    }
  }

  /* 高对比度模式支持 */
  @media (prefers-contrast: high) {
    .city-moudle {
      border: 2px solid;
    }
    
    .city_name {
      background: rgba(255, 255, 255, 0.9);
      padding: 4px 8px;
      border-radius: 4px;
    }
  }

  /* 打印样式 */
  @media print {
    .city-moudle {
      break-inside: avoid;
      margin-bottom: 10px;
    }
    
    .city-card__badge {
      display: none;
    }
  }
</style>

<script>
  // 添加点击选中效果和动态布局调整
  document.addEventListener('DOMContentLoaded', () => {
    const cityCards = document.querySelectorAll('.city-moudle');
    
    // 检查是否支持容器查询
    const supportsContainerQueries = CSS.supports('container-type: inline-size');
    
    // 动态调整布局的函数
    function adjustLayout(card: HTMLElement) {
      if (supportsContainerQueries) return; // 如果支持容器查询，就不需要JavaScript调整
      
      const width = card.offsetWidth;
      
      // 移除所有尺寸相关的类
      card.classList.remove('compact', 'small', 'large');
      card.removeAttribute('data-size');
      
      // 根据宽度添加相应的类
      if (width <= 160) {
        card.classList.add('compact');
        card.setAttribute('data-size', 'compact');
      } else if (width <= 200) {
        card.classList.add('small');
        card.setAttribute('data-size', 'small');
      } else {
        card.classList.add('large');
        card.setAttribute('data-size', 'large');
      }
    }
    
    // ResizeObserver 来监听卡片大小变化
    let resizeObserver: ResizeObserver | null = null;
    if (window.ResizeObserver && !supportsContainerQueries) {
      resizeObserver = new ResizeObserver(entries => {
        entries.forEach(entry => {
          adjustLayout(entry.target as HTMLElement);
        });
      });
    }
    
    cityCards.forEach(card => {
      const link = card.querySelector('.city_p');
      
      // 初始布局调整
      adjustLayout(card as HTMLElement);
      
      // 监听大小变化
      if (resizeObserver) {
        resizeObserver.observe(card);
      }
      
      if (link) {
        // 点击时切换选中状态
        link.addEventListener('click', (e) => {
          // 如果是导航链接，不阻止默认行为
          // 只是添加视觉反馈
          card.classList.toggle('selected');
          
          // 移除其他卡片的选中状态（单选模式）
          cityCards.forEach(otherCard => {
            if (otherCard !== card) {
              otherCard.classList.remove('selected');
            }
          });
        });

        // 键盘支持
        (link as HTMLElement).addEventListener('keydown', (e: KeyboardEvent) => {
          if (e.key === 'Enter' || e.key === ' ') {
            e.preventDefault();
            card.classList.toggle('selected');
            
            // 移除其他卡片的选中状态
            cityCards.forEach(otherCard => {
              if (otherCard !== card) {
                otherCard.classList.remove('selected');
              }
            });
            
            // 如果是Enter键，也触发导航
            if (e.key === 'Enter' && (link as HTMLAnchorElement).href) {
              window.location.href = (link as HTMLAnchorElement).href;
            }
          }
        });
      }
    });

    // 窗口大小变化时重新调整（备用方案）
    if (!supportsContainerQueries) {
      window.addEventListener('resize', () => {
        cityCards.forEach((card) => adjustLayout(card as HTMLElement));
      });
    }
  });
</script>